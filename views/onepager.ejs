<html>
	<head>
		<script src="/node_modules/angular/angular.min.js"></script>
		<link rel="stylesheet" href="/node_modules/weather-icons/css/weather-icons.min.css">
		<link rel="stylesheet" href="/node_modules/bootstrap/dist/css/bootstrap.min.css">
		<style>
			a[ng-click] {
				user-select: none;
				-moz-user-select: none;
				-webkit-user-select: none;
				cursor: pointer;
			}

			.searchresults .result {
				font-size: larger;
				font-weight: bold;
				cursor: pointer;
			}

			.searchResults .result .details {
				color: grey;
				font-weight: normal;
			}

			h1 small .glyphicon {
				cursor: pointer;
			}

			.glyphicon-remove {
				color: red;
				cursor: pointer;
			}
		</style>
		<script>
			var app = angular.module('patio', []);
			app.controller('patiocontroller', ['$scope', '$http', function($scope, $http) {
				$scope.loggedIn = undefined;
				$scope.user = undefined;
				$scope.searchResults = [];
				$scope.restaurant;

				$scope.forms = {
					login: {},
					register: {},
					searchQuery: ''
				}

				$scope.register = function () {
					$http({
						method: 'POST',
						url: '/api/register',
						data: $scope.forms.register
					}).then(function successCallback(response) {
						alert('Registered successfully. Please check your email for a confirmation code.');
					}, function errorCallback(response) {
						alert('Sorry, there was an error creating the account.');
					});
				}

				$scope.login = function () {
					$http({
						method: 'POST',
						url: '/api/login',
						data: $scope.forms.login
					}).then(function successCallback(response) {
						$scope.loggedIn = true;
						$scope.state = 'index';
					}, function errorCallback(response) {
						alert('Sorry, there was an error logging in.');
					});
				}

				$scope.whoami = function (cb) {
					$http({
						method: 'POST',
						url: '/api/whoami'
					}).then(function successCallback(response) {
						$scope.loggedIn = true;
						$scope.user = response.data;
						return cb();
					}, function errorCallback(response) {
						$scope.loggedIn = false;
						return cb(new Error());
					});
				}

				$scope.getReservations = function () {
					$http({
						method: 'POST',
						url: '/api/getReservations'
					}).then(function successCallback(response) {
						$scope.reservations = response.data;
					}, function errorCallback(response) {
						alert('Sorry, there was an error getting your reservations.');
					});
				}

				$scope.deleteReservation = function (id) {
					if (window.confirm('Are you sure you want to delete this reservation?'))
						$http({
							method: 'POST',
							url: '/api/deleteReservation',
							data: {
								id: id
							}
						}).then(function successCallback(response) {
							$scope.getReservations();
						}, function errorCallback(response) {
							alert('Sorry, there was an error deleting the reservation.');
						});
				}

				$scope.showRestaurant = function (id) {
					$scope.state = 'restaurant';
					$http({
						method: 'GET',
						url: '/restaurant/' + id
					}).then(function successCallback(response) {
						$scope.restaurant = response.data;
						$scope.forms.searchQuery = '';
					}, function errorCallback(response) {
						alert('Sorry, there was an error loading the restaurant.');
						$scope.state = 'index';
					});
				}

				$scope.logout = function () {
					$http({
						method: 'POST',
						url: '/api/logout'
					}).then(function successCallback(response) {
						window.location.reload();
					}, function errorCallback(response) {
					});
				}

				$scope.initialize = function () {
					$scope.whoami(function () {
						if (!$scope.state) $scope.state = 'index';
					});
				}

				$scope.setState = function (state) {
					$scope.state = state;
				}

				$scope.$watch('forms.searchQuery', function (query) {
					if (query.trim() === '') return $scope.searchResults = [];
					else $http({
						method: 'GET',
						url: '/search/restaurants/' + query
					}).then(function successCallback(response) {
						$scope.searchResults = response.data;
					}, function errorCallback(response) {
						$scope.searchResults = [];
					});
				});

				$scope.skyconsToWi = function (skycon) {
					return {
						'clear-night': 'wi-night-clear',
						'clear-day': 'wi-day-sunny',
						'partly-cloudy-night': 'wi-night-partly-cloudy',
						'cloudy': 'wi-cloudy',
						'partly-cloudy-day': 'wi-day-cloudy',
						'rain': 'wi-rain'
					}[skycon];
				}
				$scope.hoursFilter = function (row) {
					var hour = new Date(parseInt(row.time)*1000);
					hour = (hour.getHours() * 60 * 60 * 1000) + (hour.getMinutes() * 60 * 1000);
					var openSplit = $scope.restaurant.restaurant.open.split(':');
					var closeSplit = $scope.restaurant.restaurant.close.split(':');
					var open = (openSplit[0] * 60 * 60 * 1000) + (openSplit[1] * 60 * 1000);
					var close = (closeSplit[0] * 60 * 60 * 1000) + (closeSplit[1] * 60 * 1000);
					if (close < open) { //restaurant is open during midnight
						return (hour < close || hour >= open);
					} else { // restaurant closes before midnight
						return (hour >= open && hour < close);
					}
				}
				var militaryToStandard = function (mil) {
					if (mil === 0 || mil === 24) return '12 am';
					else if (mil === 12) return '12 pm';
					else {
						return (mil % 12).toString() + ' ' + {0: 'am', 1: 'pm'}[Math.floor(mil / 12)];
					}
				}
				$scope.militaryToStandard = militaryToStandard;
				var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
				$scope.timeToString = function (time) {
					var dtime = new Date(parseInt(time) * 1000);
					return days[dtime.getDay()] + ' ' + militaryToStandard(dtime.getHours());
				}
				$scope.reserve = function (restaurant, time) {
					var num = window.prompt("Enter the number of people:","");
					var confirmed = window.confirm('Are you sure you want to make a reservation for ' + $scope.restaurant.restaurant.name + ' at ' + $scope.timeToString(time) + ' for ' + num + ' people?');
					var jstime = new Date(parseInt(time) * 1000).getTime();
					if (!confirmed) return;
					$http({
						method: 'POST',
						url: '/api/createReservation',
						data: {
							'restaurant': restaurant,
							'number': num,
							'time': jstime
						}
					}).then(function successCallback(response) {
						alert('Success');
					}, function errorCallback(response) {
						alert('Error creating reservation');
					})};
				$scope.parseInt = window.parseInt;

				$scope.navigate = function (restaurant) {
					window.open('https://www.google.com/maps/dir//\'' + restaurant.lat + ',' + restaurant.long + '\'', '_blank');
				}
			}]);
		</script>
	</head>
	<body ng-app="patio" ng-controller="patiocontroller">
		<div class="container">
			<div class="row">
				<nav class="navbar navbar-default">
					<div class="container-fluid">
						<!-- Brand and toggle get grouped for better mobile display -->
						<div class="navbar-header">
							<a class="navbar-brand" ng-click="setState('index'); restaurant = {}">Patio</a>
						</div>

						<!-- Collect the nav links, forms, and other content for toggling -->
						<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
							<ul class="nav navbar-nav"></ul>
							<ul class="nav navbar-nav navbar-right">
								<li><a href="#" ng-click="setState('account')">My Account</a></li>
								<li><a href="#" ng-click="setState('reservations')">My Reservations</a></li>
								<li><a href="#" ng-click="logout()">Logout</a></li>
							</ul>
						</div><!-- /.navbar-collapse -->
					</div><!-- /.container-fluid -->
				</nav>
				<div ng-if="loggedIn === undefined" ng-init="initialize()" class="col-md-12">
					<p>loading...</p>
				</div>
				<div ng-if="loggedIn === false">
					<div class="col-md-6">
						<form>
							<div class="form-group">
								<label for="email">Email address</label>
								<input class="form-control" type="email" name="email" ng-model="forms.register.email" placeholder="darius@halleylabs.associates" value=""><br>
								<label for="password">Password</label>
								<input class="form-control" type="password" name="password" ng-model="forms.register.password" placeholder="cry5t41" value=""><br><br>
								<button type="submit" class="btn btn-default" ng-click="register()">Register</button>
							</div>
						</form>
					</div>
					<div class="col-md-6">
						<form>
							<div class="form-group">
								<label for="email">Email address</label>
								<input class="form-control" type="email" name="email" ng-model="forms.login.email" placeholder="rotteen@halleylabs.associates" value=""><br>
								<label for="password">Password</label>
								<input class="form-control" type="password" name="password" ng-model="forms.login.password" placeholder="r3fr4ct" value=""><br><br>
								<button type="submit" class="btn btn-default" ng-click="login()">Login</button>
							</div>
						</form>
					</div>
				</div>
				<div ng-if="loggedIn === true" class="col-md-12">
					<div ng-if="state === 'index'">
						<div class="form-group">
							<input placeholder="Search for a restaurant..." class="form-control input-lg" type="text" ng-model="forms.searchQuery"></input>
						</div>
						<ul class="list-group searchresults">
							<li class="list-group-item" ng-repeat="(key, row) in searchResults" ng-click="showRestaurant(row.id)">
								<span class="result">{{row.name}} <span class="details">{{row.cuisine}}, {{militaryToStandard(parseInt(row.open.split(':')[0]))}} to {{militaryToStandard(parseInt(row.close.split(':')[0]))}}</span></span>
							</li>
						</ul>
					</div>
					<div ng-if="state === 'restaurant'">
						<div ng-if="!restaurant">
							<p>Loading...</p>
						</div>
						<div ng-if="!!restaurant">
							<h1>{{restaurant.restaurant.name}} <small><span class="glyphicon glyphicon-map-marker" ng-click="navigate(restaurant.restaurant)" aria-hidden="true"></span></small></h1>
							<table class="table table-bordered">
								<thead>
									<tr>
										<td>Time</td>
										<td>Availability</td>
										<td>Weather</td>
									</tr>
								</thead>
								<tbody>
									<tr
										ng-repeat="row in restaurant.weather.hourly.data"
										ng-class="{'closed': hoursFilter(row), 'open': !hoursFilter(row)}"
										>
										<td>{{timeToString(row.time)}} <button ng-if="hoursFilter(row)" ng-click="reserve(restaurant.restaurant.id, row.time)">Reserve</button></td>
										<td>{{!hoursFilter(row) ? 'Closed' : 'Open'}}</td>
										<td><i class="wi" ng-class="skyconsToWi(row.icon)"></i><span> {{row.summary}}, {{row.temperature}} degrees F</span></td>
									</tr>
								</tbody>
							</table>
						</div>
					</div>
					<div ng-if="state === 'reservations'" ng-init="getReservations()">
						<ul class="list-group searchresults">
							<li class="list-group-item" ng-repeat="reservation in reservations">
								<span class="glyphicon glyphicon-remove" ng-click="deleteReservation(reservation.id)" aria-hidden="true"></span> {{timeToString(reservation.unix_time)}} at <a ng-click="showRestaurant(reservation.restaurant_id)">{{reservation.name}}</a> for {{reservation.number}}
							</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>
